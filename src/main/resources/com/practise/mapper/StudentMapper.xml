<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.practise.mapper.StudentMapper">

  <!--  修改學生信息-->
  <update id="update">
    update student
    <set>
      <if test="name != null and name != ''">
        name = #{name},
      </if>
      <if test="no != null and no != ''">
        no = #{no},
      </if>
      <if test="gender != null">
        gender = #{gender},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard},
      </if>
      <if test="address != null and address != ''">
        address = #{address},
      </if>
      <if test="graduationDate != null">
        graduation_date = #{graduationDate},
      </if>
      <if test="degree != null">
        degree = #{degree},
      </if>
      <if test="violationCount != null">
        violation_count = #{violationCount},
      </if>
      <if test="violationScore != null">
        violation_score = #{violationScore},
      </if>
      <if test="clazzId != null">
        clazz_id = #{clazzId},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime}
      </if>
    </set>
    where id = #{id}
  </update>

  <select id="list" resultType="com.practise.entity.Student">
      select s.*, c.name clazzName from student s left join clazz c on s.clazz_id = c.id
      <where>
        <if test="name != null and name != ''">
          s.name like concat('%',#{name},'%')
        </if>
        <if test="degree != null">
          and s.degree = #{degree}
        </if>
        <if test="clazzId != null">
          and s.clazz_id = #{clazzId}
        </if>
      </where>
      order by s.update_time desc
  </select>

  <!--  統計學生人數-->
  <select id="getStudentDegreeData" resultType="java.util.Map">
    select
    (case degree
      when 1 then '國中'
      when 2 then '高中'
      when 3 then '二專'
      when 4 then '大學'
      when 5 then '碩士'
      when 6 then '博士'
      else '其他' end) name,
    count(*) value
    from student group by degree
    order by degree
  </select>

  <!--  統計班級人數-->
  <select id="getStudentCountData" resultType="java.util.Map">
    select
    c.name as cname,
    COUNT(s.id) as scount
    from
    clazz c
    left join
    student s on s.clazz_id = c.id
    <where>
      <!-- 按班級名稱模糊查詢 -->
      <if test="className != null and className != ''">
        c.name LIKE CONCAT('%', #{className}, '%')
      </if>
    </where>
    GROUP BY
    c.name
    ORDER BY
    scount DESC
  </select>

</mapper>